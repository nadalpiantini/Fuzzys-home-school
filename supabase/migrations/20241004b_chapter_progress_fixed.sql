-- Migraci√≥n: Sistema de progreso por cap√≠tulo (VERSI√ìN CORREGIDA)
-- Ejecutar en Supabase SQL Editor

-- Crear tabla de progreso por cap√≠tulo
CREATE TABLE IF NOT EXISTS public.chapter_progress (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  student_id UUID NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
  curriculum_id TEXT NOT NULL,   -- ej: 'math-level1', 'literacy-level1'
  chapter_id TEXT NOT NULL,      -- ej: 'nums-01', 'enye-01'
  completed BOOLEAN DEFAULT false,
  score INTEGER DEFAULT 0,       -- puntuaci√≥n total del cap√≠tulo
  activities_completed INTEGER DEFAULT 0, -- contador de actividades completadas
  total_activities INTEGER DEFAULT 1,     -- total de actividades en el cap√≠tulo
  time_spent INTEGER DEFAULT 0,           -- tiempo en segundos
  last_activity TIMESTAMPTZ DEFAULT NOW(),
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW(),

  -- Constraint √∫nico por estudiante/curriculum/cap√≠tulo
  UNIQUE (student_id, curriculum_id, chapter_id)
);

-- √çndices para optimizar queries
CREATE INDEX IF NOT EXISTS idx_chapter_progress_student
  ON public.chapter_progress(student_id);

CREATE INDEX IF NOT EXISTS idx_chapter_progress_curriculum
  ON public.chapter_progress(curriculum_id);

CREATE INDEX IF NOT EXISTS idx_chapter_progress_completed
  ON public.chapter_progress(completed) WHERE completed = true;

-- Habilitar RLS
ALTER TABLE public.chapter_progress ENABLE ROW LEVEL SECURITY;

-- Eliminar pol√≠ticas existentes si existen (para evitar conflictos)
DROP POLICY IF EXISTS "Students can view their own chapter progress" ON public.chapter_progress;
DROP POLICY IF EXISTS "Students can insert their own chapter progress" ON public.chapter_progress;
DROP POLICY IF EXISTS "Students can update their own chapter progress" ON public.chapter_progress;
DROP POLICY IF EXISTS "Teachers can view student progress in their classes" ON public.chapter_progress;

-- Pol√≠ticas RLS siguiendo el patr√≥n existente
CREATE POLICY "Students can view their own chapter progress"
  ON public.chapter_progress FOR SELECT
  USING (auth.uid() = student_id);

CREATE POLICY "Students can insert their own chapter progress"
  ON public.chapter_progress FOR INSERT
  WITH CHECK (auth.uid() = student_id);

CREATE POLICY "Students can update their own chapter progress"
  ON public.chapter_progress FOR UPDATE
  USING (auth.uid() = student_id);

-- Pol√≠tica para profesores (pueden ver progreso de sus estudiantes)
CREATE POLICY "Teachers can view student progress in their classes"
  ON public.chapter_progress FOR SELECT
  USING (
    EXISTS (
      SELECT 1 FROM public.class_enrollments ce
      JOIN public.classes c ON c.id = ce.class_id
      WHERE ce.student_id = chapter_progress.student_id
      AND c.teacher_id = auth.uid()
    )
  );

-- Funci√≥n para actualizar timestamp autom√°ticamente
CREATE OR REPLACE FUNCTION update_chapter_progress_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ language 'plpgsql';

-- Eliminar trigger existente si existe
DROP TRIGGER IF EXISTS update_chapter_progress_updated_at ON public.chapter_progress;

-- Trigger para actualizar updated_at
CREATE TRIGGER update_chapter_progress_updated_at
  BEFORE UPDATE ON public.chapter_progress
  FOR EACH ROW EXECUTE FUNCTION update_chapter_progress_updated_at();

-- Seeds de achievements b√°sicos
-- Insertar solo si no existen (usando WHERE NOT EXISTS)
INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Detective de la √ë', 'Has dominado el sonido m√°gico de la √±', 'üïµÔ∏è', 'literacy', 50, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Detective de la √ë');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Lectura con Ritmo', 'Tu fluidez lectora est√° mejorando cada d√≠a', 'üéº', 'literacy', 50, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Lectura con Ritmo');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Contador Novato', '¬°Puedes contar hasta 10 como un verdadero matem√°tico!', 'üî¢', 'math', 50, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Contador Novato');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Sumador Inicial', '¬°Ya sabes juntar n√∫meros como un verdadero matem√°tico!', '‚ûï', 'math', 50, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Sumador Inicial');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Maestro de Sonidos Nivel 1', 'Has completado todos los retos de Sonidos M√°gicos', 'üéØ', 'literacy', 100, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Maestro de Sonidos Nivel 1');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Explorador Matem√°tico Nivel 1', 'Has explorado todo el Mundo Matem√°gico Nivel 1', 'üßÆ', 'math', 100, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Explorador Matem√°tico Nivel 1');

-- Agregar achievements para los nuevos niveles avanzados
INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Maestro de S√≠labas Trabadas', 'Has dominado las s√≠labas trabadas bl, cl, fl, gl, pl', 'üî§', 'literacy', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Maestro de S√≠labas Trabadas');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Lector de Palabras Complejas', 'Puedes leer palabras de 3-4 s√≠labas con facilidad', 'üìö', 'literacy', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Lector de Palabras Complejas');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Comprendedor de Historias', 'Entiendes perfectamente las historias que lees', 'üìñ', 'literacy', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Comprendedor de Historias');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Maestro del Vocabulario', 'Conoces muchos sin√≥nimos y ant√≥nimos', 'üìù', 'literacy', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Maestro del Vocabulario');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Maestro de las Restas', 'Puedes restar n√∫meros hasta 20 con facilidad', '‚ûñ', 'math', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Maestro de las Restas');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Contador hasta 20', 'Puedes contar y comparar n√∫meros hasta 20', 'üî¢', 'math', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Contador hasta 20');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Resolvedor de Problemas', 'Resuelves problemas con suma y resta', '‚ûï‚ûñ', 'math', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Resolvedor de Problemas');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Ge√≥metra Avanzado', 'Conoces las figuras 3D: cubos, esferas y cilindros', 'üî∑', 'math', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Ge√≥metra Avanzado');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Explorador de Estados', 'Entiendes los estados de la materia', 'üßä', 'science', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Explorador de Estados');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Maestro de Fuerzas', 'Conoces las fuerzas de empujar y jalar', '‚ö°', 'science', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Maestro de Fuerzas');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Explorador de la Luz', 'Entiendes c√≥mo funciona la luz y las sombras', 'üí°', 'science', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Explorador de la Luz');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Bot√°nico Junior', 'Conoces las partes de las plantas', 'üå±', 'science', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Bot√°nico Junior');

INSERT INTO public.achievements (name, description, icon, category, points, created_at)
SELECT 'Explorador de H√°bitats', 'Conoces d√≥nde viven diferentes animales', 'üêæ', 'science', 75, NOW()
WHERE NOT EXISTS (SELECT 1 FROM public.achievements WHERE name = 'Explorador de H√°bitats');

-- Comentarios para documentaci√≥n
COMMENT ON TABLE public.chapter_progress IS 'Progreso detallado por cap√≠tulo de cada curriculum';
COMMENT ON COLUMN public.chapter_progress.curriculum_id IS 'ID del curriculum (ej: math-level1)';
COMMENT ON COLUMN public.chapter_progress.chapter_id IS 'ID del cap√≠tulo dentro del curriculum';
COMMENT ON COLUMN public.chapter_progress.score IS 'Puntuaci√≥n total acumulada en el cap√≠tulo';
COMMENT ON COLUMN public.chapter_progress.time_spent IS 'Tiempo total gastado en el cap√≠tulo (segundos)';
