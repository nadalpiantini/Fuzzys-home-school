// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "аелемент";
BlocklyMsg["UNNAMED_KEY"] = "unnamed";  // untranslated
BlocklyMsg["TODAY"] = "Иахьа";
BlocklyMsg["DUPLICATE_BLOCK"] = "Акопиа ахыхтәуп";
BlocklyMsg["ADD_COMMENT"] = "Иацҵатәуп ахцәажәара";
BlocklyMsg["REMOVE_COMMENT"] = "Ианыхтәуп ахцәажәара";
BlocklyMsg["DUPLICATE_COMMENT"] = "Duplicate Comment";  // untranslated
BlocklyMsg["EXTERNAL_INPUTS"] = "External Inputs";  // untranslated
BlocklyMsg["INLINE_INPUTS"] = "Inline Inputs";  // untranslated
BlocklyMsg["DELETE_BLOCK"] = "Ианыхтәуп аблок";
BlocklyMsg["DELETE_X_BLOCKS"] = "Ианыхтәуп %1 блокк";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Ианыхтәуп аблокқәа (%1) зегьы?";
BlocklyMsg["CLEAN_UP"] = "Иқәгатәуп аблокқәа";
BlocklyMsg["CLOSE"] = "Close";  // untranslated
BlocklyMsg["COLLAPSE_BLOCK"] = "Иеикәрҳәтәуп Аблокқәа";
BlocklyMsg["COLLAPSE_ALL"] = "Иеикәрҳәтәуп Аблокқәа";
BlocklyMsg["EXPAND_BLOCK"] = "Иаарԥштәуп Аблокқәа";
BlocklyMsg["EXPAND_ALL"] = "Иаарԥштәуп Аблокқәа";
BlocklyMsg["DISABLE_BLOCK"] = "Иаҿыхтәуп Аблок";
BlocklyMsg["ENABLE_BLOCK"] = "Иаҿыхтәуп Аблокқәа";
BlocklyMsg["HELP"] = "Ацхыраара";
BlocklyMsg["UNDO"] = "Иаҟәыхтәуп";
BlocklyMsg["REDO"] = "Аиҭаҟаҵара";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Ишәыԥсах аҵакы";
BlocklyMsg["RENAME_VARIABLE"] = "Аҽеиҭак ахьӡ ԥсахтәуп";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Аҽеиҭакқәа'%1' зегь рыхьӡ ԥсахтәуп аҟны:";
BlocklyMsg["NEW_VARIABLE"] = "Иаԥҵатәуп аҽеиҭак";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Аҽеиҭак ахьӡ ҿыц:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "Аҽеиҭак ахьӡ '%1' змоу ыҟоуп.";
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_A_PARAMETER"] = "A variable named '%1' already exists as a parameter in the procedure '%2'.";  // untranslated
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
BlocklyMsg["DELETE_VARIABLE"] = "Ианыхтәуп аҽеиҭак '%1'";
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://ab.wikipedia.org/wiki/Аԥштәы";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Иалышәх аԥштәы";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "иарбанзаалакь аԥштәы";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Иалнахуеит аԥштәы машәыршақә";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "аԥштәы аҟынтәи";
BlocklyMsg["COLOUR_RGB_RED"] = "аҟаԥшь";
BlocklyMsg["COLOUR_RGB_GREEN"] = "аиаҵәа";
BlocklyMsg["COLOUR_RGB_BLUE"] = "жәҩангәԥштәы";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";  // untranslated
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "еилаҵатәуп";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "аԥштәы 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "аԥштәы 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "аԥштәы 1 ахәҭа";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://ab.wikipedia.org/wiki/Ацикл";
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "инагӡалатәуп %1 - нтә";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "инагӡатәуп";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Инанагӡоит акомандақәа кырынтә";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "инагӡалатәуп акәзар";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "инагӡалатәуп акәымзар";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Аҭагылазаашьа иашанаҵ, инанагӡалоит акомандақәа.";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Аҭагылазаашьа мцнаҵы, инанагӡалоит акомандақәа.";
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
BlocklyMsg["CONTROLS_FOR_TITLE"] = "ацикл %1 ала %2 инаркны %3 рҟынӡа ашьаҿа %4";
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "for each item %1 in list %2";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "ацикл иҭыҵтәуп";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "ииастәуп ацикл анаҩстәи ашьаҿахьы";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Иааннакылоит абри ацикл.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Агәҽанҵара:Ари аблок ахархәара амоуп ацикл аҩныҵҟа мацара.";
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "Аҭагылазаашьа иашазар, инанагӡоит акомандақәа.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "Аҭагылазаашьа иашазар, инанагӡоит актәи аблок акомандақәа. Акәымзар инанагӡоит аҩбатәи аблок акомандақәа.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "акәзар";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "акәымзар";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "акәымзар";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Иацнаҵоит аҭагыазаашьа аблок \"акәзар\" ахь";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://ru.wikipedia.org/wiki/Аиҟарамра";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Иҳанаҭоит иҵоуроу аҵакы, иҭагалақәоу еиҟаразар.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Иҳанаҭоит иҵоуроу аҵакы, иҭагалақәоу еиҟарамзар.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Иҳанаҭоит иҵоуроу аҵакы, актәи иҭагалоу аҩбатәи аасҭа еиҵазар.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Иҳанаҭоит аҵакы аиаша, актәи иҭагалоу аҩбатәи аасҭа еиҵазар ма иаҟаразар.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Иҳанаҭоит аҵакы аиаша, актәи иҭагалоу аҩбатәи аасҭа еиҳазар.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Иҳанаҭоит аҵакы аиаша, актәи иҭагалоу аҩбатәи аасҭа еиҳазар ма иаҟаразар.";
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Иҳанаҭоит аҵакы аиаша, иҭагалоу аҩбагьы иашазар.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "и";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Иҳанаҭоит аҵакы аиаша, иҭагалоу руак иашазар.";
BlocklyMsg["LOGIC_OPERATION_OR"] = "ма";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "%1 акәӡам";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Иҳанаҭоит аҵакы аиаша, иҭагалоу мцызар. Иҳанаҭоит аҵакы амц, иҭагалоу иашазар.";
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "аиаша";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "амц";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Иҳанаҭоит аҵакы аиаша ма амц";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "акагьы";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Иҳанаҭоит акагьы";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "иалхтәуп ала";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "аиаша акәзар";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "амц акәзар";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://ab.wikipedia.org/wiki/Ахыԥхьаӡара";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Ахыԥхьаӡара.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";  // untranslated
BlocklyMsg["MATH_TRIG_COS"] = "cos";  // untranslated
BlocklyMsg["MATH_TRIG_TAN"] = "tan";  // untranslated
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";  // untranslated
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";  // untranslated
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://ab.wikipedia.org/wiki/Арифметика";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Иҳанаҭоит ҩ-хыԥхьаӡарак реицҵалыҵ.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Иҳанаҭоит ҩ-хыԥхьаӡарак реигырхалыҵ.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Иҳанаҭоит ҩ-хыԥхьаӡарак рышьҭыхлыҵ.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Иҳанаҭоит ҩ-хыԥхьаӡарак ршалыҵ.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";  // untranslated
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "square root";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Return the square root of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "амодуль";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Иҳанаҭоит ахыԥхьаӡара амодуль.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Иҳанаҭоит иаҿагыло ахыԥхьаӡара.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Иҳанаҭоит ахыԥхьаӡара иԥсабаратәу алогарифм.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Иҳанаҭоит ахыԥхьаӡара ажәабатә логарифм.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Return e to the power of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Return 10 to the power of a number.";  // untranslated
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://ab.wikipedia.org/wiki/Атригонометриатә_функциа";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Иҳанаҭоит асинус градусла.";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Иҳанаҭоит акосинус градусла.";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Иҳанаҭоит атангенс градусла.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Иҳанаҭоит арксинус градусла.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Иҳанаҭоит арккосинус градусла.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Иҳанаҭоит арктангенс градусла.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://ab.wikipedia.org/wiki/Аматематикатә_константа";
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Иҳанаҭооит аконстантақәа руак: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) ма ∞ (аҵыхәаԥҵәарадара).";
BlocklyMsg["MATH_IS_EVEN"] = "еиҩшо";
BlocklyMsg["MATH_IS_ODD"] = "еиҩымшо";
BlocklyMsg["MATH_IS_PRIME"] = "имариоу";
BlocklyMsg["MATH_IS_WHOLE"] = "аибга";
BlocklyMsg["MATH_IS_POSITIVE"] = "иҵоуроу";
BlocklyMsg["MATH_IS_NEGATIVE"] = "иҵоурам";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "ишоит ала";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
BlocklyMsg["MATH_CHANGE_TITLE"] = "иеизырҳатәуп %1 %2 рыла";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Иацнаҵоит ахыԥхьаӡара аҽеиҭак '%1' ахь.";
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://ab.wikipedia.org/wiki/Ахыркәшара";
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Round a number up or down.";  // untranslated
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "ихыркәшатәуп";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "ихыркәшатәуп еиҳау ахь";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "ихыркәшатәуп еиҵоу ахь";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "ахьӡынҵа аицҵалыҵ";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Иҳанаҭоит ахьӡынҵа иаҵанакуа ахыԥхьаӡарақәа зегьы реицҵалыҵ.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "ахьӡынҵа аҟны иреиҵо";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Иҳанаҭоит ахьӡынҵа аҟны иреицо ахыԥхьаӡара.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "ахьӡынҵа аҟны иреиҳау";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Иҳанаҭоит ахьӡынҵа аҟны иреиҳау ахыԥхьаӡара.";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "ахьӡынҵа арифметикатә бжьара";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Иҳанаҭоит ахьӡынҵа аҟны ахыԥхьаӡарақәа зегьы рарифметикатә бжьара.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "ахьӡынҵа амедиана";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Иҳанаҭоит ахьӡынҵа аҟны ахыԥхьаӡарақәа зегьы рмедиана.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "ахьӡынҵа амода";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "standard deviation of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "ахьӡынҵа иарбанзаалакь аелемент";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Иҳанаҭоит ахьӡынҵа аҟны иарбанзаалакь елементк.";
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://ru.wikipedia.org/wiki/Ашара_цәынхала";
BlocklyMsg["MATH_MODULO_TITLE"] = "ацәынха %1 : %2";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Иҳанаҭоит ацәынха ҩ-хыԥхьаӡарак ршараан.";
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "иарбанзаалакь еибгоу ахыԥхьаӡара %1 инаркны %2 нӡа";
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "иарбанзаалакь ахыԥхьашара 0 инаркны (иалаҵаны) 1 аҟынӡа";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Иҳанаҭоит иарбанзаалакь ахыԥхьаӡара 0.0 инаркны (иалаҵаны) 1.0 аҟынӡа.";
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://ab.wikipedia.org/wiki/Ацәаҳәатә_хкы";
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "Анбан, ажәа ма ацәаҳәа атеқст аҟны.";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "иаԥҵатәуп атеқст аҟынтәи";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "иеиԥшьтәуп";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Иацҵатәуп аелемент атеқст ахь.";
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "%1 ахьы иацҵатәуп атеқст %2";
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Иацҵатәуп атеқст аҽеиҭак «%1» ахь.";
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "аура %1";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Иҳанаҭоит асимволқәа рхыԥхьаӡара (абжьажьқәа алаҵаны) иҟоу атеқст аҟны.";
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 ҭацәуп";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Иҳанаҭоит аҵакы аиаша, иҟоу атеқст ҭацәызар.";
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "атеқст %1 %2 %3 аҟны";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "атеқст %1 %2 аҟны";
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "игатәуп анбан №";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "игатәуп анбан № анҵәамҭа аҟынтәи";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "игатәуп актәи анбан";
BlocklyMsg["TEXT_CHARAT_LAST"] = "игатәуп аҵыхәтәантәи анбан";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "игатәуп иарбанзаалакь нбанк";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Иҳанаҭоит анбан иарбоу апозициа аҟны";
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Иҳанаҭоит атеқст аҟны иарбоу ахәҭа.";
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "атеқст аҟны";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "анбан № ала";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "аҵыхәтәантәи анбан ала";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "икьыԥхьтәуп %1";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Иакьыԥхьуеит атеқст, ахыԥхьаӡара ма даҽа обиеқтк.";
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "иԥсахтәуп %1 %2 ала %3 аҟны";
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "иаԥцатәуп иҭацәу ахьӡынҵа";
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "иаԥҵатәуп ахьӡынҵа аҟынтәи";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "ахьӡынҵа";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Иацнаҵоит аелемент ахьӡынҵахьы";
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
BlocklyMsg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "аура %1";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Иҳанаҭоит ахьӡынҵа аура.";
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 ҭацәуп";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Иҳанаҭоит аиаша, ахьӡынҵа ҭацәызар.";
BlocklyMsg["LISTS_INLIST"] = "ахьӡынҵа аҟны";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#finding-items-in-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET"] = "игатәуп";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "иалхны ианыхтәуп";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "ианыхтәуп";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "№ анҵәамнҭа аҟынтәи";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "актәи";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "аҵыхәтәантәи";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "иарбанзаалакь";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 - актәи аелемент.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 - аҵыхәтәантәи аелемент.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Иҳанаҭоит ахьӡынҵа актәи аелемент.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Иҳанаҭоит ахьӡынҵа аҵыхәтәантәи аелемент.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Иҳанаҭоит ахьӡынҵа иарбанзаалакь елементк.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Ианнахәуеит ахьӡынҵа актәи аелемент.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Ианнахәуеит ахьӡынҵа аҵыхәтәантәи аелемент.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Ианнахәуеит ахьӡынҵа иарбанзаалакь елементк.";
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "иаҭатәуп";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "ибжьаргылатәуп";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "=";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Иацнаҵоит аелемент ахьӡынҵа анҵәамҭахь.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "№ ала";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "to last";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "еилыԥшаатәуп %1 %2 %3";
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Еилыԥшаатәуп ахьӡынҵа акопиа.";
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "еиҵоу-еиҳауала";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "еиҳау-еиҵоуала";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "ахыԥхьаӡаратәи";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "алфавитла";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "еизгатәуп атеқст ахьӡынҵа аҟынтәи";
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Иҳанаҭоит аҽеиҭак аҵакы.";
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Иаԥҵатәуп аблок \"иаҭатәуп %1\" азы";
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "иаҭатәуп %1 = %2";
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "азы";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "иҟаҵатәуп џьара акы";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "аҟынтәи:";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "аҟынтәи:";
BlocklyMsg["PROCEDURES_CALL_DISABLED_DEF_WARNING"] = "Can't run the user-defined function '%1' because the definition block is disabled.";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Иаԥнаҵоит апроцедура, аҵакы ҳазымҭо.";
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Абри афункциа ахҳәа азыҟашәҵа...";
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "ирхынҳәтәуп";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Иаԥнаҵоит апроцедура, аҵакы ҳазҭо.";
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "аоператорқәа азин рыҭара";
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/Ацхыраагӡатә программа";
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/Ацхыраагӡатә программа";
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "апараметрқәа";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "апараметр ахьӡ:";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Иаԥҵатәуп ааԥхьара '%1'";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "Актәи аҵакы иашазар, иҳанаҭоит аҩбатәи аҵакы.";
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "https://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Агәаҽанҵара: Ари аблок ахархәара ауеит афункциа аԥҵара аҟны.";
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "OK";
BlocklyMsg["DIALOG_CANCEL"] = "Аҟәыхра";
BlocklyMsg["EDIT_BLOCK_CONTENTS"] = "Edit Block contents";  // untranslated
BlocklyMsg["MOVE_BLOCK"] = "Move Block";  // untranslated
BlocklyMsg["WINDOWS"] = "Windows";  // untranslated
BlocklyMsg["MAC_OS"] = "macOS";  // untranslated
BlocklyMsg["CHROME_OS"] = "ChromeOS";  // untranslated
BlocklyMsg["LINUX"] = "Linux";  // untranslated
BlocklyMsg["UNKNOWN"] = "Unknown";  // untranslated
BlocklyMsg["CONTROL_KEY"] = "Ctrl";  // untranslated
BlocklyMsg["COMMAND_KEY"] = "⌘ Command";  // untranslated
BlocklyMsg["OPTION_KEY"] = "⌥ Option";  // untranslated
BlocklyMsg["ALT_KEY"] = "Alt";  // untranslated
BlocklyMsg["CUT_SHORTCUT"] = "Cut";  // untranslated
BlocklyMsg["COPY_SHORTCUT"] = "Copy";  // untranslated
BlocklyMsg["PASTE_SHORTCUT"] = "Paste";  // untranslated
BlocklyMsg["HELP_PROMPT"] = "Press %1 for help on keyboard controls";  // untranslated
BlocklyMsg["SHORTCUTS_GENERAL"] = "General";  // untranslated
BlocklyMsg["SHORTCUTS_EDITING"] = "Editing";  // untranslated
BlocklyMsg["SHORTCUTS_CODE_NAVIGATION"] = "Code navigation";  // untranslated
BlocklyMsg["KEYBOARD_NAV_UNCONSTRAINED_MOVE_HINT"] = "Hold %1 and use arrow keys to move freely, then %2 to accept the position";  // untranslated
BlocklyMsg["KEYBOARD_NAV_CONSTRAINED_MOVE_HINT"] = "Use the arrow keys to move, then %1 to accept the position";  // untranslated
BlocklyMsg["KEYBOARD_NAV_COPIED_HINT"] = "Copied. Press %1 to paste.";  // untranslated
BlocklyMsg["KEYBOARD_NAV_CUT_HINT"] = "Cut. Press %1 to paste.";  // untranslated

